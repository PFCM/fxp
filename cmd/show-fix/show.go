// This file contains example functions converting and operating on fix types
// and printing the results.
// Code generated by github.com/pfcm/fix/gen DO NOT EDIT.

package main

import (
	"fmt"
	"io"

	"github.com/pfcm/fxp/fix"
)

// typeKeys provides all the type names in a stable ordering, for consistent
// iteration over the conversions and ops maps.
var typeKeys = []string{
	"U08",
	"U17",
	"U26",
	"U71",
	"U80",
	"S17",
	"S26",
	"S80",
}

// opKeys provides all the op names in a stable ordering, for consistent iteration.
var opKeys = []string{
	"SAdd",
	"SSub",
	"SMul",
}

// conversions provides functions that show a particular input pattern converted
// to the various fix types, and using the generated conversions between
// the fix types. It is keyed by type name.
var conversions = map[string][]func(io.Writer, int64){

	"U08": []func(io.Writer, int64){
		func(w io.Writer, i int64) {
			showUnsigned(w, "U08", fix.U08(i))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U08ToU17", fix.U08ToU17(fix.U08(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U08ToU26", fix.U08ToU26(fix.U08(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U08ToU71", fix.U08ToU71(fix.U08(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U08ToU80", fix.U08ToU80(fix.U08(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "U08ToS17", fix.U08ToS17(fix.U08(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "U08ToS26", fix.U08ToS26(fix.U08(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "U08ToS80", fix.U08ToS80(fix.U08(i)))
		},
	},

	"U17": []func(io.Writer, int64){
		func(w io.Writer, i int64) {
			showUnsigned(w, "U17", fix.U17(i))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U17ToU08", fix.U17ToU08(fix.U17(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U17ToU26", fix.U17ToU26(fix.U17(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U17ToU71", fix.U17ToU71(fix.U17(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U17ToU80", fix.U17ToU80(fix.U17(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "U17ToS17", fix.U17ToS17(fix.U17(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "U17ToS26", fix.U17ToS26(fix.U17(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "U17ToS80", fix.U17ToS80(fix.U17(i)))
		},
	},

	"U26": []func(io.Writer, int64){
		func(w io.Writer, i int64) {
			showUnsigned(w, "U26", fix.U26(i))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U26ToU08", fix.U26ToU08(fix.U26(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U26ToU17", fix.U26ToU17(fix.U26(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U26ToU71", fix.U26ToU71(fix.U26(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U26ToU80", fix.U26ToU80(fix.U26(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "U26ToS17", fix.U26ToS17(fix.U26(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "U26ToS26", fix.U26ToS26(fix.U26(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "U26ToS80", fix.U26ToS80(fix.U26(i)))
		},
	},

	"U71": []func(io.Writer, int64){
		func(w io.Writer, i int64) {
			showUnsigned(w, "U71", fix.U71(i))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U71ToU08", fix.U71ToU08(fix.U71(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U71ToU17", fix.U71ToU17(fix.U71(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U71ToU26", fix.U71ToU26(fix.U71(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U71ToU80", fix.U71ToU80(fix.U71(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "U71ToS17", fix.U71ToS17(fix.U71(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "U71ToS26", fix.U71ToS26(fix.U71(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "U71ToS80", fix.U71ToS80(fix.U71(i)))
		},
	},

	"U80": []func(io.Writer, int64){
		func(w io.Writer, i int64) {
			showUnsigned(w, "U80", fix.U80(i))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U80ToU08", fix.U80ToU08(fix.U80(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U80ToU17", fix.U80ToU17(fix.U80(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U80ToU26", fix.U80ToU26(fix.U80(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "U80ToU71", fix.U80ToU71(fix.U80(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "U80ToS17", fix.U80ToS17(fix.U80(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "U80ToS26", fix.U80ToS26(fix.U80(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "U80ToS80", fix.U80ToS80(fix.U80(i)))
		},
	},

	"S17": []func(io.Writer, int64){
		func(w io.Writer, i int64) {
			showSigned(w, "S17", fix.S17(i))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "S17ToU08", fix.S17ToU08(fix.S17(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "S17ToU17", fix.S17ToU17(fix.S17(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "S17ToU26", fix.S17ToU26(fix.S17(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "S17ToU71", fix.S17ToU71(fix.S17(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "S17ToU80", fix.S17ToU80(fix.S17(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "S17ToS26", fix.S17ToS26(fix.S17(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "S17ToS80", fix.S17ToS80(fix.S17(i)))
		},
	},

	"S26": []func(io.Writer, int64){
		func(w io.Writer, i int64) {
			showSigned(w, "S26", fix.S26(i))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "S26ToU08", fix.S26ToU08(fix.S26(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "S26ToU17", fix.S26ToU17(fix.S26(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "S26ToU26", fix.S26ToU26(fix.S26(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "S26ToU71", fix.S26ToU71(fix.S26(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "S26ToU80", fix.S26ToU80(fix.S26(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "S26ToS17", fix.S26ToS17(fix.S26(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "S26ToS80", fix.S26ToS80(fix.S26(i)))
		},
	},

	"S80": []func(io.Writer, int64){
		func(w io.Writer, i int64) {
			showSigned(w, "S80", fix.S80(i))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "S80ToU08", fix.S80ToU08(fix.S80(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "S80ToU17", fix.S80ToU17(fix.S80(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "S80ToU26", fix.S80ToU26(fix.S80(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "S80ToU71", fix.S80ToU71(fix.S80(i)))
		},
		func(w io.Writer, i int64) {
			showUnsigned(w, "S80ToU80", fix.S80ToU80(fix.S80(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "S80ToS17", fix.S80ToS17(fix.S80(i)))
		},
		func(w io.Writer, i int64) {
			showSigned(w, "S80ToS26", fix.S80ToS26(fix.S80(i)))
		},
	},
}

// ops provides operations between the various fix types. It is keyed
// first by the first type and then by the op.
var ops = map[string]map[string][]func(io.Writer, int64, int64){
	"U08": {
		"SAdd": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 + U08",
					fix.U08(i).SAdd(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 + U17",
					fix.U08(i).SAddU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 + U26",
					fix.U08(i).SAddU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 + U71",
					fix.U08(i).SAddU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 + U80",
					fix.U08(i).SAddU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 + S17",
					fix.U08(i).SAddS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 + S26",
					fix.U08(i).SAddS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 + S80",
					fix.U08(i).SAddS80(fix.S80(j)),
				)
			},
		},
		"SSub": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 - U08",
					fix.U08(i).SSub(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 - U17",
					fix.U08(i).SSubU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 - U26",
					fix.U08(i).SSubU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 - U71",
					fix.U08(i).SSubU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 - U80",
					fix.U08(i).SSubU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 - S17",
					fix.U08(i).SSubS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 - S26",
					fix.U08(i).SSubS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 - S80",
					fix.U08(i).SSubS80(fix.S80(j)),
				)
			},
		},
		"SMul": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 * U08",
					fix.U08(i).SMul(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 * U17",
					fix.U08(i).SMulU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 * U26",
					fix.U08(i).SMulU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 * U71",
					fix.U08(i).SMulU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 * U80",
					fix.U08(i).SMulU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 * S17",
					fix.U08(i).SMulS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 * S26",
					fix.U08(i).SMulS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U08 * S80",
					fix.U08(i).SMulS80(fix.S80(j)),
				)
			},
		},
	},
	"U17": {
		"SAdd": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 + U08",
					fix.U17(i).SAddU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 + U17",
					fix.U17(i).SAdd(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 + U26",
					fix.U17(i).SAddU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 + U71",
					fix.U17(i).SAddU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 + U80",
					fix.U17(i).SAddU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 + S17",
					fix.U17(i).SAddS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 + S26",
					fix.U17(i).SAddS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 + S80",
					fix.U17(i).SAddS80(fix.S80(j)),
				)
			},
		},
		"SSub": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 - U08",
					fix.U17(i).SSubU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 - U17",
					fix.U17(i).SSub(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 - U26",
					fix.U17(i).SSubU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 - U71",
					fix.U17(i).SSubU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 - U80",
					fix.U17(i).SSubU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 - S17",
					fix.U17(i).SSubS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 - S26",
					fix.U17(i).SSubS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 - S80",
					fix.U17(i).SSubS80(fix.S80(j)),
				)
			},
		},
		"SMul": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 * U08",
					fix.U17(i).SMulU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 * U17",
					fix.U17(i).SMul(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 * U26",
					fix.U17(i).SMulU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 * U71",
					fix.U17(i).SMulU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 * U80",
					fix.U17(i).SMulU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 * S17",
					fix.U17(i).SMulS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 * S26",
					fix.U17(i).SMulS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U17 * S80",
					fix.U17(i).SMulS80(fix.S80(j)),
				)
			},
		},
	},
	"U26": {
		"SAdd": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 + U08",
					fix.U26(i).SAddU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 + U17",
					fix.U26(i).SAddU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 + U26",
					fix.U26(i).SAdd(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 + U71",
					fix.U26(i).SAddU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 + U80",
					fix.U26(i).SAddU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 + S17",
					fix.U26(i).SAddS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 + S26",
					fix.U26(i).SAddS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 + S80",
					fix.U26(i).SAddS80(fix.S80(j)),
				)
			},
		},
		"SSub": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 - U08",
					fix.U26(i).SSubU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 - U17",
					fix.U26(i).SSubU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 - U26",
					fix.U26(i).SSub(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 - U71",
					fix.U26(i).SSubU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 - U80",
					fix.U26(i).SSubU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 - S17",
					fix.U26(i).SSubS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 - S26",
					fix.U26(i).SSubS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 - S80",
					fix.U26(i).SSubS80(fix.S80(j)),
				)
			},
		},
		"SMul": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 * U08",
					fix.U26(i).SMulU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 * U17",
					fix.U26(i).SMulU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 * U26",
					fix.U26(i).SMul(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 * U71",
					fix.U26(i).SMulU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 * U80",
					fix.U26(i).SMulU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 * S17",
					fix.U26(i).SMulS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 * S26",
					fix.U26(i).SMulS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U26 * S80",
					fix.U26(i).SMulS80(fix.S80(j)),
				)
			},
		},
	},
	"U71": {
		"SAdd": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 + U08",
					fix.U71(i).SAddU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 + U17",
					fix.U71(i).SAddU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 + U26",
					fix.U71(i).SAddU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 + U71",
					fix.U71(i).SAdd(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 + U80",
					fix.U71(i).SAddU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 + S17",
					fix.U71(i).SAddS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 + S26",
					fix.U71(i).SAddS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 + S80",
					fix.U71(i).SAddS80(fix.S80(j)),
				)
			},
		},
		"SSub": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 - U08",
					fix.U71(i).SSubU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 - U17",
					fix.U71(i).SSubU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 - U26",
					fix.U71(i).SSubU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 - U71",
					fix.U71(i).SSub(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 - U80",
					fix.U71(i).SSubU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 - S17",
					fix.U71(i).SSubS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 - S26",
					fix.U71(i).SSubS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 - S80",
					fix.U71(i).SSubS80(fix.S80(j)),
				)
			},
		},
		"SMul": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 * U08",
					fix.U71(i).SMulU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 * U17",
					fix.U71(i).SMulU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 * U26",
					fix.U71(i).SMulU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 * U71",
					fix.U71(i).SMul(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 * U80",
					fix.U71(i).SMulU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 * S17",
					fix.U71(i).SMulS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 * S26",
					fix.U71(i).SMulS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U71 * S80",
					fix.U71(i).SMulS80(fix.S80(j)),
				)
			},
		},
	},
	"U80": {
		"SAdd": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 + U08",
					fix.U80(i).SAddU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 + U17",
					fix.U80(i).SAddU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 + U26",
					fix.U80(i).SAddU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 + U71",
					fix.U80(i).SAddU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 + U80",
					fix.U80(i).SAdd(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 + S17",
					fix.U80(i).SAddS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 + S26",
					fix.U80(i).SAddS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 + S80",
					fix.U80(i).SAddS80(fix.S80(j)),
				)
			},
		},
		"SSub": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 - U08",
					fix.U80(i).SSubU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 - U17",
					fix.U80(i).SSubU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 - U26",
					fix.U80(i).SSubU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 - U71",
					fix.U80(i).SSubU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 - U80",
					fix.U80(i).SSub(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 - S17",
					fix.U80(i).SSubS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 - S26",
					fix.U80(i).SSubS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 - S80",
					fix.U80(i).SSubS80(fix.S80(j)),
				)
			},
		},
		"SMul": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 * U08",
					fix.U80(i).SMulU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 * U17",
					fix.U80(i).SMulU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 * U26",
					fix.U80(i).SMulU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 * U71",
					fix.U80(i).SMulU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 * U80",
					fix.U80(i).SMul(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 * S17",
					fix.U80(i).SMulS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 * S26",
					fix.U80(i).SMulS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showUnsigned(
					w, "U80 * S80",
					fix.U80(i).SMulS80(fix.S80(j)),
				)
			},
		},
	},
	"S17": {
		"SAdd": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 + U08",
					fix.S17(i).SAddU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 + U17",
					fix.S17(i).SAddU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 + U26",
					fix.S17(i).SAddU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 + U71",
					fix.S17(i).SAddU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 + U80",
					fix.S17(i).SAddU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 + S17",
					fix.S17(i).SAdd(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 + S26",
					fix.S17(i).SAddS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 + S80",
					fix.S17(i).SAddS80(fix.S80(j)),
				)
			},
		},
		"SSub": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 - U08",
					fix.S17(i).SSubU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 - U17",
					fix.S17(i).SSubU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 - U26",
					fix.S17(i).SSubU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 - U71",
					fix.S17(i).SSubU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 - U80",
					fix.S17(i).SSubU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 - S17",
					fix.S17(i).SSub(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 - S26",
					fix.S17(i).SSubS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 - S80",
					fix.S17(i).SSubS80(fix.S80(j)),
				)
			},
		},
		"SMul": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 * U08",
					fix.S17(i).SMulU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 * U17",
					fix.S17(i).SMulU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 * U26",
					fix.S17(i).SMulU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 * U71",
					fix.S17(i).SMulU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 * U80",
					fix.S17(i).SMulU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 * S17",
					fix.S17(i).SMul(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 * S26",
					fix.S17(i).SMulS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S17 * S80",
					fix.S17(i).SMulS80(fix.S80(j)),
				)
			},
		},
	},
	"S26": {
		"SAdd": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 + U08",
					fix.S26(i).SAddU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 + U17",
					fix.S26(i).SAddU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 + U26",
					fix.S26(i).SAddU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 + U71",
					fix.S26(i).SAddU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 + U80",
					fix.S26(i).SAddU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 + S17",
					fix.S26(i).SAddS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 + S26",
					fix.S26(i).SAdd(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 + S80",
					fix.S26(i).SAddS80(fix.S80(j)),
				)
			},
		},
		"SSub": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 - U08",
					fix.S26(i).SSubU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 - U17",
					fix.S26(i).SSubU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 - U26",
					fix.S26(i).SSubU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 - U71",
					fix.S26(i).SSubU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 - U80",
					fix.S26(i).SSubU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 - S17",
					fix.S26(i).SSubS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 - S26",
					fix.S26(i).SSub(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 - S80",
					fix.S26(i).SSubS80(fix.S80(j)),
				)
			},
		},
		"SMul": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 * U08",
					fix.S26(i).SMulU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 * U17",
					fix.S26(i).SMulU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 * U26",
					fix.S26(i).SMulU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 * U71",
					fix.S26(i).SMulU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 * U80",
					fix.S26(i).SMulU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 * S17",
					fix.S26(i).SMulS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 * S26",
					fix.S26(i).SMul(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S26 * S80",
					fix.S26(i).SMulS80(fix.S80(j)),
				)
			},
		},
	},
	"S80": {
		"SAdd": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 + U08",
					fix.S80(i).SAddU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 + U17",
					fix.S80(i).SAddU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 + U26",
					fix.S80(i).SAddU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 + U71",
					fix.S80(i).SAddU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 + U80",
					fix.S80(i).SAddU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 + S17",
					fix.S80(i).SAddS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 + S26",
					fix.S80(i).SAddS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 + S80",
					fix.S80(i).SAdd(fix.S80(j)),
				)
			},
		},
		"SSub": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 - U08",
					fix.S80(i).SSubU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 - U17",
					fix.S80(i).SSubU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 - U26",
					fix.S80(i).SSubU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 - U71",
					fix.S80(i).SSubU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 - U80",
					fix.S80(i).SSubU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 - S17",
					fix.S80(i).SSubS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 - S26",
					fix.S80(i).SSubS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 - S80",
					fix.S80(i).SSub(fix.S80(j)),
				)
			},
		},
		"SMul": []func(io.Writer, int64, int64){
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 * U08",
					fix.S80(i).SMulU08(fix.U08(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 * U17",
					fix.S80(i).SMulU17(fix.U17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 * U26",
					fix.S80(i).SMulU26(fix.U26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 * U71",
					fix.S80(i).SMulU71(fix.U71(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 * U80",
					fix.S80(i).SMulU80(fix.U80(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 * S17",
					fix.S80(i).SMulS17(fix.S17(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 * S26",
					fix.S80(i).SMulS26(fix.S26(j)),
				)
			},
			func(w io.Writer, i, j int64) {
				showSigned(
					w, "S80 * S80",
					fix.S80(i).SMul(fix.S80(j)),
				)
			},
		},
	},
}

func showUnsigned[U ~uint8](w io.Writer, name string, u U) {
	fmt.Fprintf(w, "%s:\t%v\t%d\t0x%02x\t0b%08b\n", name, u, u, uint8(u), u)
}

func showSigned[S ~int8](w io.Writer, name string, s S) {
	sign := ""
	if s < 0 {
		sign = "-"
	}
	fmt.Fprintf(w, "%s:\t%v\t%d\t%s0x%02x\t0b%08b\n",
		name, s, s, sign, abs(int(s)), uint8(s))
}

func abs(i int) int { return max(i, -i) }
